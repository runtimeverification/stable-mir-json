{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://runtimeverification.com/schemas/stable-mir.schema.json",
  "title": "Stable MIR JSON Schema",
  "description": "JSON Schema for Rust Stable MIR (Mid-level Intermediate Representation) output generated by stable-mir-json tool",
  "version": "1.0.0",
  "type": "object",
  "required": ["name", "crate_id", "allocs", "functions", "uneval_consts", "items", "types", "spans", "debug", "machine"],
  "properties": {
    "name": {
      "description": "Name of the crate",
      "type": "string"
    },
    "crate_id": {
      "description": "Unique identifier for the crate",
      "type": "integer"
    },
    "allocs": {
      "description": "Memory allocations indexed by AllocId",
      "type": "array",
      "items": {
        "description": "Tuple of [AllocId, AllocInfo]",
        "type": "array",
        "items": [
          { "$ref": "#/$defs/AllocId" },
          { "$ref": "#/$defs/AllocInfo" }
        ],
        "minItems": 2,
        "maxItems": 2
      }
    },
    "functions": {
      "description": "Function symbols referenced in the program",
      "type": "array",
      "items": {
        "description": "Tuple of [LinkMapKey, FnSymType]",
        "type": "array",
        "items": [
          { "$ref": "#/$defs/LinkMapKey" },
          { "$ref": "#/$defs/FnSymType" }
        ],
        "minItems": 2,
        "maxItems": 2
      }
    },
    "uneval_consts": {
      "description": "Unevaluated constants",
      "type": "array",
      "items": {
        "description": "Tuple of [ConstDef, String representation]",
        "type": "array",
        "items": [
          { "$ref": "#/$defs/ConstDef" },
          { "type": "string" }
        ],
        "minItems": 2,
        "maxItems": 2
      }
    },
    "items": {
      "description": "Monomorphized items (functions, statics, etc.) in the program",
      "type": "array",
      "items": { "$ref": "#/$defs/Item" }
    },
    "types": {
      "description": "Type information with metadata",
      "type": "array",
      "items": {
        "description": "Tuple of [Ty, TypeMetadata]",
        "type": "array",
        "items": [
          { "$ref": "#/$defs/Ty" },
          { "$ref": "#/$defs/TypeMetadata" }
        ],
        "minItems": 2,
        "maxItems": 2
      }
    },
    "spans": {
      "description": "Source location spans",
      "type": "array",
      "items": {
        "description": "Tuple of [span_index, SourceData]",
        "type": "array",
        "items": [
          { "type": "integer" },
          { "$ref": "#/$defs/SourceData" }
        ],
        "minItems": 2,
        "maxItems": 2
      }
    },
    "debug": {
      "description": "Optional debug information",
      "oneOf": [
        { "type": "null" },
        { "$ref": "#/$defs/SmirJsonDebugInfo" }
      ]
    },
    "machine": {
      "description": "Target machine information",
      "$ref": "#/$defs/MachineInfo"
    }
  },
  "$defs": {
    "AllocId": {
      "description": "Allocation identifier",
      "type": "integer",
      "minimum": 0
    },
    "AllocInfo": {
      "description": "Information about an allocation",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "Function": {
              "description": "Function allocation",
              "type": "object"
            }
          },
          "required": ["Function"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "VTable": {
              "description": "Virtual table allocation",
              "type": "object"
            }
          },
          "required": ["VTable"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Static": {
              "description": "Static allocation with DefId",
              "$ref": "#/$defs/DefId"
            }
          },
          "required": ["Static"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Memory": {
              "description": "Memory allocation",
              "type": "object",
              "required": ["align", "bytes", "mutability", "provenance"],
              "properties": {
                "align": {
                  "description": "Memory alignment requirement",
                  "type": "integer",
                  "minimum": 1
                },
                "bytes": {
                  "description": "Raw byte data",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 255
                  }
                },
                "mutability": { "$ref": "#/$defs/Mutability" },
                "provenance": {
                  "description": "Pointer provenance information",
                  "type": "object",
                  "required": ["ptrs"],
                  "properties": {
                    "ptrs": {
                      "description": "Pointer references as [offset, allocation_id] pairs",
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": { "type": "integer" },
                        "minItems": 2,
                        "maxItems": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "required": ["Memory"],
          "additionalProperties": false
        }
      ]
    },
    "LinkMapKey": {
      "description": "Key for function map linking (serialized conditionally based on features)",
      "oneOf": [
        { "type": "string" },
        { "type": "object" }
      ]
    },
    "FnSymType": {
      "description": "Function symbol type",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "NormalSym": {
              "description": "Regular function symbol (mangled name)",
              "type": "string"
            }
          },
          "required": ["NormalSym"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "IntrinsicSym": {
              "description": "Intrinsic function name",
              "type": "string"
            }
          },
          "required": ["IntrinsicSym"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "NoOpSym": {
              "description": "No-operation symbol (usually empty)",
              "type": "string"
            }
          },
          "required": ["NoOpSym"],
          "additionalProperties": false
        }
      ]
    },
    "ConstDef": {
      "description": "Constant definition identifier",
      "type": "integer"
    },
    "Item": {
      "description": "A monomorphized item",
      "type": "object",
      "required": ["symbol_name", "mono_item_kind", "details"],
      "properties": {
        "symbol_name": {
          "description": "Mangled symbol name",
          "type": "string"
        },
        "mono_item_kind": { "$ref": "#/$defs/MonoItemKind" },
        "details": {
          "description": "Additional details about the item",
          "oneOf": [
            { "type": "null" },
            { "$ref": "#/$defs/ItemDetails" }
          ]
        }
      }
    },
    "MonoItemKind": {
      "description": "The kind of monomorphic item",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "MonoItemFn": {
              "type": "object",
              "required": ["name", "id", "body"],
              "properties": {
                "name": {
                  "description": "Function name",
                  "type": "string"
                },
                "id": { "$ref": "#/$defs/DefId" },
                "body": {
                  "description": "Optional MIR body",
                  "oneOf": [
                    { "type": "null" },
                    { "$ref": "#/$defs/Body" }
                  ]
                }
              }
            }
          },
          "required": ["MonoItemFn"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "MonoItemStatic": {
              "type": "object",
              "required": ["name", "id", "allocation"],
              "properties": {
                "name": {
                  "description": "Static name",
                  "type": "string"
                },
                "id": { "$ref": "#/$defs/DefId" },
                "allocation": {
                  "description": "Optional allocation",
                  "oneOf": [
                    { "type": "null" },
                    { "$ref": "#/$defs/Allocation" }
                  ]
                }
              }
            }
          },
          "required": ["MonoItemStatic"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "MonoItemGlobalAsm": {
              "type": "object",
              "required": ["asm"],
              "properties": {
                "asm": {
                  "description": "Assembly code",
                  "type": "string"
                }
              }
            }
          },
          "required": ["MonoItemGlobalAsm"],
          "additionalProperties": false
        }
      ]
    },
    "DefId": {
      "description": "Definition identifier",
      "type": "integer"
    },
    "ItemDetails": {
      "description": "Additional details about an item",
      "type": "object",
      "properties": {
        "fn_instance_kind": {
          "oneOf": [
            { "type": "null" },
            { "$ref": "#/$defs/InstanceKind" }
          ]
        },
        "fn_item_kind": {
          "oneOf": [
            { "type": "null" },
            { "$ref": "#/$defs/ItemKind" }
          ]
        },
        "fn_body_details": {
          "oneOf": [
            { "type": "null" },
            { "$ref": "#/$defs/BodyDetails" }
          ]
        },
        "internal_kind": {
          "description": "Internal kind as string",
          "type": "string"
        },
        "path": {
          "description": "Item path",
          "type": "string"
        },
        "internal_ty": {
          "description": "Internal type as string",
          "type": "string"
        },
        "generic_data": { "$ref": "#/$defs/GenericData" }
      }
    },
    "Ty": {
      "description": "Type reference from stable_mir",
      "type": "object"
    },
    "TypeMetadata": {
      "description": "Type metadata with layout information",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "EnumType": {
              "type": "object",
              "required": ["layout", "name", "discriminants", "field_types"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "name": { "type": "string" },
                "discriminants": {
                  "type": "array",
                  "items": { "type": "integer" }
                },
                "field_types": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    {
                      "type": "array",
                      "items": { "type": "integer" }
                    }
                  ]
                }
              }
            }
          },
          "required": ["EnumType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "StructType": {
              "type": "object",
              "required": ["layout", "name", "field_types"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "name": { "type": "string" },
                "field_types": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    {
                      "type": "array",
                      "items": { "type": "integer" }
                    }
                  ]
                }
              }
            }
          },
          "required": ["StructType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "UnionType": {
              "type": "object",
              "required": ["layout", "name", "field_types"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "name": { "type": "string" },
                "field_types": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    {
                      "type": "array",
                      "items": { "type": "integer" }
                    }
                  ]
                }
              }
            }
          },
          "required": ["UnionType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "TupleType": {
              "type": "object",
              "required": ["layout", "field_types"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "field_types": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    {
                      "type": "array",
                      "items": { "type": "integer" }
                    }
                  ]
                }
              }
            }
          },
          "required": ["TupleType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "ArrayType": {
              "type": "object",
              "required": ["layout", "len", "field_types"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "len": { "type": "integer" },
                "field_types": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    {
                      "type": "array",
                      "items": { "type": "integer" }
                    }
                  ]
                }
              }
            }
          },
          "required": ["ArrayType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "SliceType": {
              "type": "object",
              "required": ["layout", "field_types"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "field_types": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    {
                      "type": "array",
                      "items": { "type": "integer" }
                    }
                  ]
                }
              }
            }
          },
          "required": ["SliceType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "PrimitiveType": {
              "type": "object",
              "required": ["layout", "prim_type"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "prim_type": { "$ref": "#/$defs/PrimitiveTy" }
              }
            }
          },
          "required": ["PrimitiveType"],
          "additionalProperties": false
        }
      ]
    },
    "SourceData": {
      "description": "Source location data",
      "type": "object"
    },
    "SmirJsonDebugInfo": {
      "description": "Debug information",
      "type": "object",
      "required": ["fn_sources", "types", "foreign_modules"],
      "properties": {
        "fn_sources": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              { "$ref": "#/$defs/LinkMapKey" },
              { "$ref": "#/$defs/ItemSource" }
            ],
            "minItems": 2,
            "maxItems": 2
          }
        },
        "types": { "$ref": "#/$defs/TyMap" },
        "foreign_modules": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              { "type": "string" },
              {
                "type": "array",
                "items": { "$ref": "#/$defs/ForeignModule" }
              }
            ],
            "minItems": 2,
            "maxItems": 2
          }
        }
      }
    },
    "MachineInfo": {
      "description": "Target machine information from stable_mir",
      "type": "object"
    },
    "Allocation": {
      "description": "Memory allocation",
      "type": "object"
    },
    "InstanceKind": {
      "description": "Kind of function instance",
      "type": "object"
    },
    "ItemKind": {
      "description": "Kind of item",
      "type": "object"
    },
    "BodyDetails": {
      "description": "Details about function body",
      "type": "object",
      "required": ["pp"],
      "properties": {
        "pp": {
          "description": "Pretty-printed representation",
          "type": "string"
        }
      }
    },
    "GenericData": {
      "description": "Generic parameter data",
      "type": "array",
      "items": {
        "type": "array",
        "items": { "type": "string" },
        "minItems": 2,
        "maxItems": 2
      }
    },
    "ItemSource": {
      "description": "Source of an item",
      "type": "array",
      "items": { "type": "string" }
    },
    "TyMap": {
      "description": "Type map for debug info",
      "type": "object"
    },
    "ForeignModule": {
      "description": "Foreign module information",
      "type": "object"
    },
    "Body": {
      "description": "MIR function body",
      "type": "object",
      "required": ["arg_count", "blocks", "locals", "span", "spread_arg", "var_debug_info"],
      "properties": {
        "arg_count": {
          "description": "Number of function arguments",
          "type": "integer",
          "minimum": 0
        },
        "blocks": {
          "description": "Basic blocks in the function",
          "type": "array",
          "items": { "$ref": "#/$defs/BasicBlock" }
        },
        "locals": {
          "description": "Local variable declarations",
          "type": "array",
          "items": { "$ref": "#/$defs/LocalDecl" }
        },
        "span": { "$ref": "#/$defs/Span" },
        "spread_arg": {
          "description": "Position of spread argument (for variadic functions)",
          "type": ["integer", "null"]
        },
        "var_debug_info": {
          "description": "Debug information for variables",
          "type": "array",
          "items": { "$ref": "#/$defs/VarDebugInfo" }
        }
      }
    },
    "BasicBlock": {
      "description": "A basic block in MIR",
      "type": "object",
      "required": ["statements", "terminator"],
      "properties": {
        "statements": {
          "description": "MIR statements in this block",
          "type": "array",
          "items": { "$ref": "#/$defs/Statement" }
        },
        "terminator": { "$ref": "#/$defs/Terminator" }
      }
    },
    "Statement": {
      "description": "A MIR statement",
      "type": "object",
      "required": ["kind", "span"],
      "properties": {
        "kind": { "$ref": "#/$defs/StatementKind" },
        "span": { "$ref": "#/$defs/Span" }
      }
    },
    "StatementKind": {
      "description": "The kind of MIR statement",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "Assign": {
              "description": "Assignment statement [place, rvalue]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/Place" },
                { "$ref": "#/$defs/Rvalue" }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["Assign"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "StorageLive": {
              "description": "Mark local as live",
              "type": "integer"
            }
          },
          "required": ["StorageLive"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "StorageDead": {
              "description": "Mark local as dead",
              "type": "integer"
            }
          },
          "required": ["StorageDead"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Intrinsic": {
              "description": "Intrinsic operation"
            }
          },
          "required": ["Intrinsic"],
          "additionalProperties": false
        },
        {
          "type": "string",
          "enum": ["Nop"]
        }
      ]
    },
    "Terminator": {
      "description": "Basic block terminator",
      "type": "object",
      "required": ["kind", "span"],
      "properties": {
        "kind": { "$ref": "#/$defs/TerminatorKind" },
        "span": { "$ref": "#/$defs/Span" }
      }
    },
    "TerminatorKind": {
      "description": "The kind of terminator",
      "oneOf": [
        {
          "type": "string",
          "enum": ["Return", "Resume", "Terminate", "Unreachable"]
        },
        {
          "type": "object",
          "properties": {
            "Goto": {
              "type": "object",
              "required": ["target"],
              "properties": {
                "target": {
                  "description": "Target basic block index",
                  "type": "integer"
                }
              }
            }
          },
          "required": ["Goto"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "SwitchInt": {
              "type": "object",
              "required": ["discr", "targets"],
              "properties": {
                "discr": { "$ref": "#/$defs/Operand" },
                "targets": { "$ref": "#/$defs/SwitchTargets" }
              }
            }
          },
          "required": ["SwitchInt"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Call": {
              "type": "object",
              "required": ["args", "destination", "func", "target", "unwind"],
              "properties": {
                "args": {
                  "description": "Function call arguments",
                  "type": "array",
                  "items": { "$ref": "#/$defs/Operand" }
                },
                "destination": { "$ref": "#/$defs/Place" },
                "func": { "$ref": "#/$defs/Operand" },
                "target": {
                  "description": "Target basic block after call",
                  "type": ["integer", "null"]
                },
                "unwind": { "$ref": "#/$defs/UnwindAction" }
              }
            }
          },
          "required": ["Call"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Assert": {
              "type": "object",
              "required": ["cond", "expected", "msg", "target", "unwind"],
              "properties": {
                "cond": { "$ref": "#/$defs/Operand" },
                "expected": {
                  "description": "Expected boolean value",
                  "type": "boolean"
                },
                "msg": { "$ref": "#/$defs/AssertMessage" },
                "target": {
                  "description": "Target basic block if assertion succeeds",
                  "type": "integer"
                },
                "unwind": { "$ref": "#/$defs/UnwindAction" }
              }
            }
          },
          "required": ["Assert"],
          "additionalProperties": false
        }
      ]
    },
    "Place": {
      "description": "A place in MIR (local variable with projections)",
      "type": "object",
      "required": ["local", "projection"],
      "properties": {
        "local": {
          "description": "Local variable index",
          "type": "integer",
          "minimum": 0
        },
        "projection": {
          "description": "Sequence of projections (field access, deref, etc.)",
          "type": "array",
          "items": { "$ref": "#/$defs/ProjectionElem" }
        }
      }
    },
    "ProjectionElem": {
      "description": "Element of a place projection",
      "oneOf": [
        {
          "type": "string",
          "enum": ["Deref"]
        },
        {
          "type": "object",
          "properties": {
            "Field": {
              "description": "Field access [field_index, type_index]",
              "type": "array",
              "items": { "type": "integer" },
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["Field"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Index": { "$ref": "#/$defs/Operand" }
          },
          "required": ["Index"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "ConstantIndex": {
              "type": "object",
              "required": ["offset", "min_length", "from_end"],
              "properties": {
                "offset": { "type": "integer" },
                "min_length": { "type": "integer" },
                "from_end": { "type": "boolean" }
              }
            }
          },
          "required": ["ConstantIndex"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Subslice": {
              "type": "object",
              "required": ["from", "to", "from_end"],
              "properties": {
                "from": { "type": "integer" },
                "to": { "type": "integer" },
                "from_end": { "type": "boolean" }
              }
            }
          },
          "required": ["Subslice"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Downcast": {
              "description": "Enum variant downcast to variant index",
              "type": "integer"
            }
          },
          "required": ["Downcast"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "OpaqueCast": {
              "description": "Opaque type cast to type index",
              "type": "integer"
            }
          },
          "required": ["OpaqueCast"],
          "additionalProperties": false
        }
      ]
    },
    "Rvalue": {
      "description": "Right-hand side value in assignment",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "Use": { "$ref": "#/$defs/Operand" }
          },
          "required": ["Use"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Repeat": {
              "description": "Repeat value to create array [operand, count]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/Operand" },
                { "$ref": "#/$defs/Const" }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["Repeat"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Ref": {
              "description": "Create reference [region, borrow_kind, place]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/Region" },
                { "$ref": "#/$defs/BorrowKind" },
                { "$ref": "#/$defs/Place" }
              ],
              "minItems": 3,
              "maxItems": 3
            }
          },
          "required": ["Ref"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "ThreadLocalRef": {
              "description": "Reference to thread-local static",
              "type": "integer"
            }
          },
          "required": ["ThreadLocalRef"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "AddressOf": {
              "description": "Raw pointer to place [mutability, place]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/Mutability" },
                { "$ref": "#/$defs/Place" }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["AddressOf"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Len": {
              "description": "Length of array or slice",
              "$ref": "#/$defs/Place"
            }
          },
          "required": ["Len"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Cast": {
              "description": "Type cast [kind, operand, target_type]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/CastKind" },
                { "$ref": "#/$defs/Operand" },
                { "$ref": "#/$defs/TypeIndex" }
              ],
              "minItems": 3,
              "maxItems": 3
            }
          },
          "required": ["Cast"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "BinaryOp": {
              "description": "Binary operation [op, left, right]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/BinOp" },
                { "$ref": "#/$defs/Operand" },
                { "$ref": "#/$defs/Operand" }
              ],
              "minItems": 3,
              "maxItems": 3
            }
          },
          "required": ["BinaryOp"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "CheckedBinaryOp": {
              "description": "Checked binary operation [op, left, right]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/BinOp" },
                { "$ref": "#/$defs/Operand" },
                { "$ref": "#/$defs/Operand" }
              ],
              "minItems": 3,
              "maxItems": 3
            }
          },
          "required": ["CheckedBinaryOp"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "NullaryOp": {
              "description": "Nullary operation [op, type]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/NullOp" },
                { "$ref": "#/$defs/TypeIndex" }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["NullaryOp"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "UnaryOp": {
              "description": "Unary operation [op, operand]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/UnOp" },
                { "$ref": "#/$defs/Operand" }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["UnaryOp"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Discriminant": {
              "description": "Get enum discriminant",
              "$ref": "#/$defs/Place"
            }
          },
          "required": ["Discriminant"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Aggregate": {
              "description": "Aggregate construction [kind, operands]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/AggregateKind" },
                {
                  "type": "array",
                  "items": { "$ref": "#/$defs/Operand" }
                }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["Aggregate"],
          "additionalProperties": false
        }
      ]
    },
    "Operand": {
      "description": "MIR operand (value that can be consumed by operations)",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "Copy": {
              "description": "Copy value from place",
              "$ref": "#/$defs/Place"
            }
          },
          "required": ["Copy"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Move": {
              "description": "Move value from place",
              "$ref": "#/$defs/Place"
            }
          },
          "required": ["Move"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Constant": {
              "description": "Constant value",
              "$ref": "#/$defs/Const"
            }
          },
          "required": ["Constant"],
          "additionalProperties": false
        }
      ]
    },
    "Const": {
      "description": "Constant value",
      "type": "object",
      "required": ["const_", "span", "user_ty"],
      "properties": {
        "const_": { "$ref": "#/$defs/ConstData" },
        "span": { "$ref": "#/$defs/Span" },
        "user_ty": {
          "description": "User type annotation",
          "type": ["null", "object"]
        }
      }
    },
    "ConstData": {
      "description": "Constant data",
      "type": "object",
      "required": ["id", "kind", "ty"],
      "properties": {
        "id": {
          "description": "Constant ID",
          "type": "integer"
        },
        "kind": { "$ref": "#/$defs/ConstKind" },
        "ty": { "$ref": "#/$defs/TypeIndex" }
      }
    },
    "ConstKind": {
      "description": "Kind of constant",
      "oneOf": [
        {
          "type": "string",
          "enum": ["ZeroSized"]
        },
        {
          "type": "object",
          "properties": {
            "Allocated": {
              "type": "object",
              "required": ["align", "bytes", "mutability", "provenance"],
              "properties": {
                "align": { "type": "integer", "minimum": 1 },
                "bytes": {
                  "type": "array",
                  "items": { "type": "integer", "minimum": 0, "maximum": 255 }
                },
                "mutability": { "$ref": "#/$defs/Mutability" },
                "provenance": {
                  "type": "object",
                  "required": ["ptrs"],
                  "properties": {
                    "ptrs": {
                      "type": "array",
                      "items": {
                        "type": "array",
                        "items": { "type": "integer" },
                        "minItems": 2,
                        "maxItems": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "required": ["Allocated"],
          "additionalProperties": false
        }
      ]
    },
    "LocalDecl": {
      "description": "Local variable declaration",
      "type": "object",
      "required": ["mutability", "span", "ty"],
      "properties": {
        "mutability": { "$ref": "#/$defs/Mutability" },
        "span": { "$ref": "#/$defs/Span" },
        "ty": { "$ref": "#/$defs/TypeIndex" }
      }
    },
    "VarDebugInfo": {
      "description": "Debug information for a variable",
      "type": "object"
    },
    "TypeData": {
      "description": "Type information with layout",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "PrimitiveType": { "$ref": "#/$defs/PrimitiveTy" }
          },
          "required": ["PrimitiveType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "TupleType": {
              "type": "object",
              "required": ["layout", "types"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "types": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    {
                      "type": "array",
                      "items": { "$ref": "#/$defs/TypeIndex" }
                    }
                  ]
                }
              }
            }
          },
          "required": ["TupleType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "ArrayType": {
              "type": "object",
              "required": ["layout", "size"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "size": {
                  "description": "Array size (null for unsized arrays)",
                  "type": ["integer", "null"]
                }
              }
            }
          },
          "required": ["ArrayType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "StructType": {
              "type": "object",
              "required": ["layout", "name", "fields"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "name": {
                  "description": "Struct name",
                  "type": "string"
                },
                "fields": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    { "$ref": "#/$defs/FieldData" }
                  ]
                }
              }
            }
          },
          "required": ["StructType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "EnumType": {
              "type": "object",
              "required": ["layout", "name", "discriminants", "fields"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "name": {
                  "description": "Enum name",
                  "type": "string"
                },
                "discriminants": {
                  "description": "Discriminant values for each variant",
                  "type": "array",
                  "items": { "type": "integer" }
                },
                "fields": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    { "$ref": "#/$defs/FieldData" }
                  ]
                }
              }
            }
          },
          "required": ["EnumType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "PtrType": {
              "type": "object",
              "required": ["layout", "pointee_type"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "pointee_type": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    { "$ref": "#/$defs/TypeIndex" }
                  ]
                }
              }
            }
          },
          "required": ["PtrType"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "RefType": {
              "type": "object",
              "required": ["layout", "pointee_type"],
              "properties": {
                "layout": { "$ref": "#/$defs/LayoutData" },
                "pointee_type": {
                  "oneOf": [
                    { "type": "string", "enum": ["elided"] },
                    { "$ref": "#/$defs/TypeIndex" }
                  ]
                }
              }
            }
          },
          "required": ["RefType"],
          "additionalProperties": false
        }
      ]
    },
    "LayoutData": {
      "description": "Type layout information",
      "type": "object",
      "required": ["abi", "abi_align", "fields", "size", "variants"],
      "properties": {
        "abi": { "$ref": "#/$defs/Abi" },
        "abi_align": {
          "description": "ABI-required alignment",
          "type": "integer",
          "minimum": 1
        },
        "fields": { "$ref": "#/$defs/FieldsShape" },
        "size": { "$ref": "#/$defs/Size" },
        "variants": { "$ref": "#/$defs/Variants" }
      }
    },
    "PrimitiveTy": {
      "description": "Primitive type",
      "oneOf": [
        {
          "type": "string",
          "enum": ["Bool", "Char", "Str"]
        },
        {
          "type": "object",
          "properties": {
            "Int": {
              "type": "string",
              "enum": ["I8", "I16", "I32", "I64", "I128", "Isize"]
            }
          },
          "required": ["Int"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Uint": {
              "type": "string",
              "enum": ["U8", "U16", "U32", "U64", "U128", "Usize"]
            }
          },
          "required": ["Uint"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Float": {
              "type": "string",
              "enum": ["F32", "F64"]
            }
          },
          "required": ["Float"],
          "additionalProperties": false
        }
      ]
    },
    "Mutability": {
      "description": "Mutability of a binding or memory location",
      "type": "string",
      "enum": ["Mut", "Not"]
    },
    "Span": {
      "description": "Source code span (index into spans table)",
      "type": "integer",
      "minimum": 0
    },
    "TypeIndex": {
      "description": "Index into the types array",
      "type": "integer",
      "minimum": 0
    },
    "BinOp": {
      "description": "Binary operation",
      "type": "string",
      "enum": [
        "Add", "Sub", "Mul", "Div", "Rem",
        "BitXor", "BitAnd", "BitOr", "Shl", "Shr",
        "Eq", "Lt", "Le", "Ne", "Ge", "Gt",
        "Offset"
      ]
    },
    "UnOp": {
      "description": "Unary operation",
      "type": "string",
      "enum": ["Not", "Neg"]
    },
    "NullOp": {
      "description": "Nullary operation",
      "type": "string",
      "enum": ["SizeOf", "AlignOf", "OffsetOf"]
    },
    "CastKind": {
      "description": "Type cast kind",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "IntToInt", "FloatToInt", "FloatToFloat", "IntToFloat",
            "PtrToPtr", "FnPtrToPtr", "Transmute"
          ]
        },
        {
          "type": "object",
          "properties": {
            "PointerCoercion": { "$ref": "#/$defs/PointerCoercion" }
          },
          "required": ["PointerCoercion"],
          "additionalProperties": false
        }
      ]
    },
    "PointerCoercion": {
      "description": "Pointer coercion kind",
      "type": "string",
      "enum": ["ReifyFnPointer", "UnsafeFnPointer", "ClosureFnPointer", "MutToConstPointer", "ArrayToPointer"]
    },
    "BorrowKind": {
      "description": "Kind of borrow",
      "type": "string",
      "enum": ["Shared", "Mut", "Unique"]
    },
    "Region": {
      "description": "Lifetime region",
      "type": "object"
    },
    "UnwindAction": {
      "description": "What to do on unwinding",
      "oneOf": [
        {
          "type": "string",
          "enum": ["Continue", "Unreachable", "Terminate"]
        },
        {
          "type": "object",
          "properties": {
            "Cleanup": {
              "description": "Jump to cleanup block",
              "type": "integer"
            }
          },
          "required": ["Cleanup"],
          "additionalProperties": false
        }
      ]
    },
    "AggregateKind": {
      "description": "Kind of aggregate construction",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "Array": {
              "description": "Array construction with type index",
              "type": "integer"
            }
          },
          "required": ["Array"],
          "additionalProperties": false
        },
        {
          "type": "string",
          "enum": ["Tuple"]
        },
        {
          "type": "object",
          "properties": {
            "Adt": {
              "description": "ADT construction [def, variant, args, def_id]",
              "type": "array",
              "items": [
                { "type": "object" },
                { "type": "integer" },
                { "type": "object" },
                { "type": "integer" }
              ],
              "minItems": 4,
              "maxItems": 4
            }
          },
          "required": ["Adt"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Closure": {
              "description": "Closure construction [def_id, args]",
              "type": "array",
              "items": [
                { "type": "integer" },
                { "type": "object" }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["Closure"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Coroutine": {
              "description": "Generator construction [def_id, args, movability]",
              "type": "array",
              "items": [
                { "type": "integer" },
                { "type": "object" },
                { "type": "string" }
              ],
              "minItems": 3,
              "maxItems": 3
            }
          },
          "required": ["Coroutine"],
          "additionalProperties": false
        }
      ]
    },
    "SwitchTargets": {
      "description": "Switch targets for SwitchInt",
      "type": "object"
    },
    "AssertMessage": {
      "description": "Runtime assertion message",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "Overflow": {
              "description": "Arithmetic overflow [op, left, right]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/BinOp" },
                { "$ref": "#/$defs/Operand" },
                { "$ref": "#/$defs/Operand" }
              ],
              "minItems": 3,
              "maxItems": 3
            }
          },
          "required": ["Overflow"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "RemainderByZero": { "$ref": "#/$defs/Operand" }
          },
          "required": ["RemainderByZero"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "DivisionByZero": { "$ref": "#/$defs/Operand" }
          },
          "required": ["DivisionByZero"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "BoundsCheck": {
              "description": "Bounds check [len, index]",
              "type": "array",
              "items": [
                { "$ref": "#/$defs/Operand" },
                { "$ref": "#/$defs/Operand" }
              ],
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["BoundsCheck"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "MisalignedPointerDereference": {
              "description": "Misaligned pointer dereference",
              "type": "array"
            }
          },
          "required": ["MisalignedPointerDereference"],
          "additionalProperties": false
        }
      ]
    },
    "Abi": {
      "description": "ABI representation of a type",
      "oneOf": [
        {
          "type": "string",
          "enum": ["Uninhabited"]
        },
        {
          "type": "object",
          "properties": {
            "Scalar": { "$ref": "#/$defs/Scalar" }
          },
          "required": ["Scalar"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "ScalarPair": {
              "description": "Pair of scalars [first, second]",
              "type": "array",
              "items": { "$ref": "#/$defs/Scalar" },
              "minItems": 2,
              "maxItems": 2
            }
          },
          "required": ["ScalarPair"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Vector": {
              "description": "Vector type",
              "type": "object"
            }
          },
          "required": ["Vector"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Aggregate": {
              "type": "object",
              "required": ["sized"],
              "properties": {
                "sized": {
                  "description": "Whether the aggregate is sized",
                  "type": "boolean"
                }
              }
            }
          },
          "required": ["Aggregate"],
          "additionalProperties": false
        }
      ]
    },
    "Scalar": {
      "description": "Scalar ABI representation",
      "type": "object"
    },
    "FieldsShape": {
      "description": "Layout of fields in a type",
      "oneOf": [
        {
          "type": "string",
          "enum": ["Primitive"]
        },
        {
          "type": "object",
          "properties": {
            "Union": {
              "description": "Union with field count",
              "type": "integer"
            }
          },
          "required": ["Union"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Array": {
              "type": "object",
              "required": ["count", "stride"],
              "properties": {
                "count": { "type": "integer" },
                "stride": { "$ref": "#/$defs/Size" }
              }
            }
          },
          "required": ["Array"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Arbitrary": {
              "type": "object",
              "required": ["offsets"],
              "properties": {
                "offsets": {
                  "type": "array",
                  "items": { "$ref": "#/$defs/Size" }
                }
              }
            }
          },
          "required": ["Arbitrary"],
          "additionalProperties": false
        }
      ]
    },
    "Size": {
      "description": "Size in bytes",
      "type": "integer",
      "minimum": 0
    },
    "Variants": {
      "description": "Variant layout information",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "Single": {
              "type": "object",
              "required": ["index"],
              "properties": {
                "index": {
                  "description": "Single variant index",
                  "type": "integer"
                }
              }
            }
          },
          "required": ["Single"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "Multiple": {
              "description": "Multiple variants (enum layout)",
              "type": "object"
            }
          },
          "required": ["Multiple"],
          "additionalProperties": false
        }
      ]
    },
    "FieldData": {
      "description": "Field layout and type information",
      "type": "object"
    }
  }
}