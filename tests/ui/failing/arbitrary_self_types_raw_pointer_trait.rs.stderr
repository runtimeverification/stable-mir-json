    Blocking waiting for file lock on package cache
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.00s
     Running `target/debug/stable_mir_json -Zno-codegen /home/zncv/Applications/mir-semantics-compiletest/ui/self/arbitrary_self_types_raw_pointer_trait.rs`
error[E0658]: `*const i32` cannot be used as the type of `self` without the `arbitrary_self_types_pointers` feature
  --> /home/zncv/Applications/mir-semantics-compiletest/ui/self/arbitrary_self_types_raw_pointer_trait.rs:17:18
   |
17 |     fn foo(self: *const Self) -> &'static str {
   |                  ^^^^^^^^^^^
   |
   = note: see issue #44874 <https://github.com/rust-lang/rust/issues/44874> for more information
   = help: add `#![feature(arbitrary_self_types_pointers)]` to the crate attributes to enable
   = note: this compiler was built on 2024-11-28; consider upgrading it if it is out of date
   = help: consider changing to `self`, `&self`, `&mut self`, `self: Box<Self>`, `self: Rc<Self>`, `self: Arc<Self>`, or `self: Pin<P>` (where P is one of the previous types except `Self`)

error[E0658]: `*const i32` cannot be used as the type of `self` without the `arbitrary_self_types_pointers` feature
  --> /home/zncv/Applications/mir-semantics-compiletest/ui/self/arbitrary_self_types_raw_pointer_trait.rs:21:25
   |
21 |     unsafe fn bar(self: *const Self) -> i64 {
   |                         ^^^^^^^^^^^
   |
   = note: see issue #44874 <https://github.com/rust-lang/rust/issues/44874> for more information
   = help: add `#![feature(arbitrary_self_types_pointers)]` to the crate attributes to enable
   = note: this compiler was built on 2024-11-28; consider upgrading it if it is out of date
   = help: consider changing to `self`, `&self`, `&mut self`, `self: Box<Self>`, `self: Rc<Self>`, `self: Arc<Self>`, or `self: Pin<P>` (where P is one of the previous types except `Self`)

error[E0658]: `*const u32` cannot be used as the type of `self` without the `arbitrary_self_types_pointers` feature
  --> /home/zncv/Applications/mir-semantics-compiletest/ui/self/arbitrary_self_types_raw_pointer_trait.rs:27:18
   |
27 |     fn foo(self: *const Self) -> &'static str {
   |                  ^^^^^^^^^^^
   |
   = note: see issue #44874 <https://github.com/rust-lang/rust/issues/44874> for more information
   = help: add `#![feature(arbitrary_self_types_pointers)]` to the crate attributes to enable
   = note: this compiler was built on 2024-11-28; consider upgrading it if it is out of date
   = help: consider changing to `self`, `&self`, `&mut self`, `self: Box<Self>`, `self: Rc<Self>`, `self: Arc<Self>`, or `self: Pin<P>` (where P is one of the previous types except `Self`)

error[E0658]: `*const u32` cannot be used as the type of `self` without the `arbitrary_self_types_pointers` feature
  --> /home/zncv/Applications/mir-semantics-compiletest/ui/self/arbitrary_self_types_raw_pointer_trait.rs:31:25
   |
31 |     unsafe fn bar(self: *const Self) -> i64 {
   |                         ^^^^^^^^^^^
   |
   = note: see issue #44874 <https://github.com/rust-lang/rust/issues/44874> for more information
   = help: add `#![feature(arbitrary_self_types_pointers)]` to the crate attributes to enable
   = note: this compiler was built on 2024-11-28; consider upgrading it if it is out of date
   = help: consider changing to `self`, `&self`, `&mut self`, `self: Box<Self>`, `self: Rc<Self>`, `self: Arc<Self>`, or `self: Pin<P>` (where P is one of the previous types except `Self`)

error[E0658]: `*const Self` cannot be used as the type of `self` without the `arbitrary_self_types_pointers` feature
 --> /home/zncv/Applications/mir-semantics-compiletest/ui/self/arbitrary_self_types_raw_pointer_trait.rs:7:18
  |
7 |     fn foo(self: *const Self) -> &'static str;
  |                  ^^^^^^^^^^^
  |
  = note: see issue #44874 <https://github.com/rust-lang/rust/issues/44874> for more information
  = help: add `#![feature(arbitrary_self_types_pointers)]` to the crate attributes to enable
  = note: this compiler was built on 2024-11-28; consider upgrading it if it is out of date
  = help: consider changing to `self`, `&self`, `&mut self`, `self: Box<Self>`, `self: Rc<Self>`, `self: Arc<Self>`, or `self: Pin<P>` (where P is one of the previous types except `Self`)

error[E0658]: `*const Self` cannot be used as the type of `self` without the `arbitrary_self_types_pointers` feature
 --> /home/zncv/Applications/mir-semantics-compiletest/ui/self/arbitrary_self_types_raw_pointer_trait.rs:9:25
  |
9 |     unsafe fn bar(self: *const Self) -> i64;
  |                         ^^^^^^^^^^^
  |
  = note: see issue #44874 <https://github.com/rust-lang/rust/issues/44874> for more information
  = help: add `#![feature(arbitrary_self_types_pointers)]` to the crate attributes to enable
  = note: this compiler was built on 2024-11-28; consider upgrading it if it is out of date
  = help: consider changing to `self`, `&self`, `&mut self`, `self: Box<Self>`, `self: Rc<Self>`, `self: Arc<Self>`, or `self: Pin<P>` (where P is one of the previous types except `Self`)

error[E0658]: `*const *const Self` cannot be used as the type of `self` without the `arbitrary_self_types_pointers` feature
  --> /home/zncv/Applications/mir-semantics-compiletest/ui/self/arbitrary_self_types_raw_pointer_trait.rs:11:33
   |
11 |     unsafe fn complicated(self: *const *const Self) -> i64 where Self: Sized {
   |                                 ^^^^^^^^^^^^^^^^^^
   |
   = note: see issue #44874 <https://github.com/rust-lang/rust/issues/44874> for more information
   = help: add `#![feature(arbitrary_self_types_pointers)]` to the crate attributes to enable
   = note: this compiler was built on 2024-11-28; consider upgrading it if it is out of date
   = help: consider changing to `self`, `&self`, `&mut self`, `self: Box<Self>`, `self: Rc<Self>`, `self: Arc<Self>`, or `self: Pin<P>` (where P is one of the previous types except `Self`)

error: aborting due to 7 previous errors

For more information about this error, try `rustc --explain E0658`.
