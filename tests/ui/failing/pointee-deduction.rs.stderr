    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.00s
     Running `target/debug/stable_mir_json -Zno-codegen /home/zncv/Applications/mir-semantics-compiletest/ui/traits/pointee-deduction.rs`
warning: lint `unused_tuple_struct_fields` has been renamed to `dead_code`
  --> /home/zncv/Applications/mir-semantics-compiletest/ui/traits/pointee-deduction.rs:16:33
   |
16 | struct Wrapper1<T: Foo>(#[allow(unused_tuple_struct_fields)] <T as Foo>::Bar);
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `dead_code`
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: lint `unused_tuple_struct_fields` has been renamed to `dead_code`
  --> /home/zncv/Applications/mir-semantics-compiletest/ui/traits/pointee-deduction.rs:17:33
   |
17 | struct Wrapper2<T: Foo>(#[allow(unused_tuple_struct_fields)] <Wrapper1<T> as Pointee>::Metadata);
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `dead_code`

warning: 2 warnings emitted

note: no errors encountered even though delayed bugs were created

note: those delayed bugs will now be shown as internal compiler errors

error: internal compiler error: unexpected ambiguity: CanonicalQueryInput { canonical: Canonical { value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [] }, value: AliasTy { args: [Wrapper1<T/#0>], def_id: DefId(2:2312 ~ core[478e]::ptr::metadata::Pointee::Metadata), .. } }, max_universe: U0, variables: [] }, typing_mode: PostAnalysis } Canonical { value: QueryResponse { var_values: CanonicalVarValues { var_values: [] }, region_constraints: QueryRegionConstraints { outlives: [], member_constraints: [] }, certainty: Ambiguous, opaque_types: [], value: NormalizationResult { normalized_ty: ^0 } }, max_universe: U0, variables: [CanonicalVarInfo { kind: Ty(General(U0)) }] }
  |
  = note: delayed at compiler/rustc_trait_selection/src/traits/query/normalize.rs:289:30 - disabled backtrace

thread 'rustc' panicked at compiler/rustc_errors/src/lib.rs:1756:9:
Box<dyn Any>
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
