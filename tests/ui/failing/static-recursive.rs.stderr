    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.00s
     Running `target/debug/stable_mir_json -Zno-codegen /home/zncv/Applications/mir-semantics-compiletest/ui/statics/static-recursive.rs`
warning: creating a shared reference to mutable static is discouraged
 --> /home/zncv/Applications/mir-semantics-compiletest/ui/statics/static-recursive.rs:2:36
  |
2 | static mut S: *const u8 = unsafe { &S as *const *const u8 as *const u8 };
  |                                    ^^ shared reference to mutable static
  |
  = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>
  = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives
  = note: `#[warn(static_mut_refs)]` on by default
help: use `&raw const` instead to create a raw pointer
  |
2 | static mut S: *const u8 = unsafe { &raw const S as *const *const u8 as *const u8 };
  |                                    ~~~~~~~~~~

warning: creating a shared reference to mutable static is discouraged
  --> /home/zncv/Applications/mir-semantics-compiletest/ui/statics/static-recursive.rs:17:25
   |
17 |     unsafe { assert_eq!(S, *(S as *const *const u8)); }
   |                         ^ shared reference to mutable static
   |
   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>
   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives


thread 'rustc' has overflowed its stack
fatal runtime error: stack overflow
Aborted (core dumped)
